{
  "coreServices": [
    "api",
    "www",
    "charon",
    "cron",
    "jobRequest",
    "jobTrigger",
    "deploy",
    "manifest",
    "release",
    "rSync",
    "sync",
    "timeTrigger",
    "versionTrigger",
    "ini",
    "nexec",
    "irc",
    "nf"
  ],
  "integrationServices": [
    {
      "name": "bitbucket",
      "type": "auth",
      "services": []
    },
    {
      "name": "bitbucketServer",
      "type": "auth",
      "services": []
    },
    {
      "name": "github",
      "type": "auth",
      "services": []
    },
    {
      "name": "githubEnterprise",
      "type": "auth",
      "services": []
    },
    {
      "name": "AWS",
      "type": "cloudproviders",
      "services": [
        "marshaller",
        "ec2"
      ]
    },
    {
      "name": "amazons3",
      "type": "cloudproviders",
      "services": []
    },
    {
      "name": "AWS",
      "type": "deploy",
      "services": []
    },
    {
      "name": "AWS_IAM",
      "type": "deploy",
      "services": []
    },
    {
      "name": "DCL",
      "type": "deploy",
      "services": []
    },
    {
      "name": "DDC",
      "type": "deploy",
      "services": []
    },
    {
      "name": "GKE",
      "type": "deploy",
      "services": []
    },
    {
      "name": "TRIPUB",
      "type": "deploy",
      "services": [
        "certgen"
      ]
    },
    {
      "name": "CLUSTER",
      "type": "deploy",
      "services": [
        "certgen"
      ]
    },
    {
      "name": "Jenkins",
      "type": "externalci",
      "services": [
        "jSync"
      ]
    },
    {
      "name": "Docker",
      "type": "hub",
      "services": []
    },
    {
      "name": "Docker Trusted Registry",
      "type": "hub",
      "services": []
    },
    {
      "name": "Private Docker Registry",
      "type": "hub",
      "services": []
    },
    {
      "name": "Quay.io",
      "type": "hub",
      "services": []
    },
    {
      "name": "ECR",
      "type": "hub",
      "services": []
    },
    {
      "name": "GCR",
      "type": "hub",
      "services": []
    },
    {
      "name": "artifactory",
      "type": "hub",
      "services": []
    },
    {
      "name": "pem-key",
      "type": "key",
      "services": []
    },
    {
      "name": "ssh-key",
      "type": "key",
      "services": []
    },
    {
      "name": "gmail",
      "type": "notification",
      "services": [
        "nf",
        "email"
      ]
    },
    {
      "name": "mailgun",
      "type": "notification",
      "services": [
        "nf",
        "email"
      ]
    },
    {
      "name": "SMTP",
      "type": "notification",
      "services": [
        "nf",
        "email"
      ]
    },
    {
      "name": "Email",
      "type": "notification",
      "services": [
        "nf",
        "email"
      ]
    },
    {
      "name": "hipchat",
      "type": "notification",
      "services": [
        "nf",
        "hipchat"
      ]
    },
    {
      "name": "Slack",
      "type": "notification",
      "services": [
        "nf",
        "slack"
      ]
    },
    {
      "name": "webhook",
      "type": "notification",
      "services": [
        "nf",
        "webhook"
      ]
    },
    {
      "name": "braintree",
      "type": "payment",
      "services": [
        "braintree"
      ]
    },
    {
      "name": "github",
      "type": "scm",
      "services": []
    },
    {
      "name": "ghe",
      "type": "scm",
      "services": []
    },
    {
      "name": "bitbucket",
      "type": "scm",
      "services": []
    },
    {
      "name": "gitlab",
      "type": "scm",
      "services": []
    },
    {
      "name": "Git store",
      "type": "scm",
      "services": []
    },
    {
      "name": "VAULT",
      "type": "secretsBackend",
      "services": []
    }
  ],
  "serviceConfigs": [
    {
      "name": "api",
      "repository": "api50",
      "envs": [
        "DBNAME",
        "DBUSERNAME",
        "DBHOST",
        "DBPORT",
        "DBPASSWORD",
        "DBDIALECT",
        "SHIPPABLE_API_URL"
      ],
      "replicas": 2
    },
    {
      "name": "www",
      "repository": "www50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_VORTEX_URL",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_WWW_PORT",
        "SHIPPABLE_WWW_URL",
        "SHIPPABLE_FE_URL",
        "SHIPPABLE_RDS_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_AWS_ACCOUNT_ID",
        "GITHUB_LINK_SYSINT_ID",
        "BITBUCKET_LINK_SYSINT_ID",
        "RUN_MODE"
      ]
    },
    {
      "name": "nexec",
      "repository": "nexec",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_VORTEX_URL",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE"
      ]
    },
    {
      "name": "braintree",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "certgen",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "charon",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "cron",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "DEFAULT_CRON_LOOP_HOURS",
        "COMPONENT"
      ]
    },
    {
      "name": "ec2",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "email",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_WWW_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "hipchat",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_WWW_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "hubspotSync",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "SHIP_TIME_LIMIT",
        "HUBSPOT_API_ENDPOINT",
        "HUBSPOT_API_TOKEN",
        "HUBSPOT_LIST_ID",
        "SHOULD_SIMULATE"
      ]
    },
    {
      "name": "ini",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "DOCKER_VERSION",
        "SETUP_RUN_SH",
        "EXEC_IMAGE"
      ]
    },
    {
      "name": "jobRequest",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT",
        "REGISTRY_REGION",
        "REGISTRY_ACCOUNT_ID"
      ]
    },
    {
      "name": "jobTrigger",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT",
        "API_RETRY_INTERVAL"
      ]
    },
    {
      "name": "jSync",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "marshaller",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT",
        "PROVIDERS",
        "SHIPPABLE_EXEC_IMAGE"
      ]
    },
    {
      "name": "nf",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "slack",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "deploy",
      "repository": "micro50",
      "replicas": 3,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "JOB_TYPE"
      ]
    },
    {
      "name": "manifest",
      "repository": "micro50",
      "replicas": 2,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "JOB_TYPE"
      ]
    },
    {
      "name": "release",
      "repository": "micro50",
      "replicas": 2,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "JOB_TYPE"
      ]
    },
    {
      "name": "rSync",
      "repository": "micro50",
      "replicas": 2,
      "envs": [
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "RUN_MODE",
        "COMPONENT",
        "JOB_TYPE"
      ]
    },
    {
      "name": "sync",
      "repository": "micro50",
      "replicas": 2,
      "envs": [
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_API_TOKEN",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "timeTrigger",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_API_TOKEN",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "versionTrigger",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_API_TOKEN",
        "RUN_MODE",
        "COMPONENT"
      ]
    },
    {
      "name": "webhook",
      "repository": "micro50",
      "replicas": 1,
      "envs": [
        "SHIPPABLE_ROOT_AMQP_URL",
        "SHIPPABLE_AMQP_DEFAULT_EXCHANGE",
        "SHIPPABLE_API_URL",
        "SHIPPABLE_API_TOKEN",
        "SHIPPABLE_WWW_URL",
        "RUN_MODE",
        "COMPONENT"
      ]
    }
  ],
  "systemImages": [
    {
      "name": "drydock/u14nod",
      "isActive": true
    }
  ],
  "systemMachineImages": [
    {
      "externalId": "ami-abcdefgh",
      "provider": "AWS",
      "name": "Stable",
      "isAvailable": true,
      "isDefault": true,
      "region": "us-east-1",
      "keyName": "shippable-beta",
      "execImage": "shipimg/mexec:master.11241",
      "runShImage": "shipimg/runSh:v4.10.24",
      "securityGroup": "sg-123456"
    }
  ]
}
